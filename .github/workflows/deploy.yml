name: Deploy

on:
  pull_request:
    # Further explanation of the "synchronize" event: https://github.community/t/what-is-a-pull-request-synchronize-event/14784
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: 16
  STAGING_NAME: staging
  STAGING_URL: https://maacstaging.cresclab.com/
  PRODUCTION_NAME: production
  PRODUCTION_URL: https://maac.cresclab.com/

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.pull_request.base.ref == 'master' && ${{ env.PRODUCTION_NAME }} || ${{ env.STAGING_NAME }} }}
      url: ${{ github.event.pull_request.base.ref == 'master' && ${{ env.PRODUCTION_URL }} || ${{ env.STAGING_URL }} }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Handle yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          # The cache key contains all the information we want to fix: OS, node version, and the contents of the
          # yarn.lock file, using hashFiles to convert the file contents into a string
          key: ${{ runner.os }}-node${{ inputs.node_version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node${{ inputs.node_version }}-yarn-

      - name: Install dependencies
        run: rm -f .yarnclean && yarn --frozen-lockfile --ignore-engines --non-interactive --silent
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          HUSKY_SKIP_INSTALL: true